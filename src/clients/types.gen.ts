// This file is auto-generated by @hey-api/openapi-ts

export type ApiResponse = {
    code?: number;
    type?: string;
    message?: string;
};

export type Category = {
    id?: number;
    name?: string;
};

export type Order = {
    id?: number;
    petId?: number;
    quantity?: number;
    shipDate?: string;
    /**
     * Order Status
     */
    status?: 'placed' | 'approved' | 'delivered';
    complete?: boolean;
};

export type Pet = {
    id?: number;
    category?: Category;
    name: string;
    photoUrls: Array<(string)>;
    tags?: Array<Tag>;
    /**
     * pet status in the store
     */
    status?: 'available' | 'pending' | 'sold';
};

export type Tag = {
    id?: number;
    name?: string;
};

export type User = {
    id?: number;
    username?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    password?: string;
    phone?: string;
    /**
     * User Status
     */
    userStatus?: number;
};

export type GetPetByIdData = {
    path: {
        /**
         * ID of pet to return
         */
        petId: number;
    };
};

export type GetPetByIdResponse = (Pet);

export type GetPetByIdError = (unknown);

export type UpdatePetWithFormData = {
    body?: {
        /**
         * Updated name of the pet
         */
        name?: string;
        /**
         * Updated status of the pet
         */
        status?: string;
    };
    path: {
        /**
         * ID of pet that needs to be updated
         */
        petId: number;
    };
};

export type DeletePetData = {
    headers?: {
        api_key?: string;
    };
    path: {
        /**
         * Pet id to delete
         */
        petId: number;
    };
};

export type UploadFileData = {
    body?: {
        /**
         * Additional data to pass to server
         */
        additionalMetadata?: string;
        /**
         * file to upload
         */
        file?: (Blob | File);
    };
    path: {
        /**
         * ID of pet to update
         */
        petId: number;
    };
};

export type UploadFileResponse = (ApiResponse);

export type UploadFileError = unknown;

export type AddPetData = {
    /**
     * Pet object that needs to be added to the store
     */
    body: Pet;
};

export type UpdatePetData = {
    /**
     * Pet object that needs to be added to the store
     */
    body: Pet;
};

export type FindPetsByStatusData = {
    query: {
        /**
         * Status values that need to be considered for filter
         */
        status: Array<string>;
    };
};

export type FindPetsByStatusResponse = (Array<Pet>);

export type FindPetsByStatusError = (unknown);

export type FindPetsByTagsData = {
    query: {
        /**
         * Tags to filter by
         */
        tags: Array<string>;
    };
};

export type FindPetsByTagsResponse = (Array<Pet>);

export type FindPetsByTagsError = (unknown);

export type GetInventoryResponse = ({
    [key: string]: (number);
});

export type GetInventoryError = unknown;

export type GetOrderByIdData = {
    path: {
        /**
         * ID of pet that needs to be fetched
         */
        orderId: number;
    };
};

export type GetOrderByIdResponse = (Order);

export type GetOrderByIdError = (unknown);

export type DeleteOrderData = {
    path: {
        /**
         * ID of the order that needs to be deleted
         */
        orderId: number;
    };
};

export type PlaceOrderData = {
    /**
     * order placed for purchasing the pet
     */
    body: Order;
};

export type PlaceOrderResponse = (Order);

export type PlaceOrderError = (unknown);

export type GetUserByNameData = {
    path: {
        /**
         * The name that needs to be fetched. Use user1 for testing.
         */
        username: string;
    };
};

export type GetUserByNameResponse = (User);

export type GetUserByNameError = (unknown);

export type UpdateUserData = {
    /**
     * Updated user object
     */
    body: User;
    path: {
        /**
         * name that need to be updated
         */
        username: string;
    };
};

export type DeleteUserData = {
    path: {
        /**
         * The name that needs to be deleted
         */
        username: string;
    };
};

export type CreateUserData = {
    /**
     * Created user object
     */
    body: User;
};

export type CreateUserResponse = (unknown);

export type CreateUserError = unknown;

export type CreateUsersWithArrayInputData = unknown;

export type CreateUsersWithArrayInputResponse = (unknown);

export type CreateUsersWithArrayInputError = unknown;

export type CreateUsersWithListInputData = unknown;

export type CreateUsersWithListInputResponse = (unknown);

export type CreateUsersWithListInputError = unknown;

export type LoginUserData = {
    query: {
        /**
         * The password for login in clear text
         */
        password: string;
        /**
         * The user name for login
         */
        username: string;
    };
};

export type LoginUserResponse = (string);

export type LoginUserError = (unknown);

export type LogoutUserResponse = (unknown);

export type LogoutUserError = unknown;